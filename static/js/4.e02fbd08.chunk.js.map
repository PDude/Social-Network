{"version":3,"sources":["assets/images/cover_img.jfif","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Post","props","profile","className","style","post_item","img_text_wrap","img_wrap","src","photos","small","userPhoto","alt","post_text_img_wrap","imgPath","post_img_wrap","message","btns_social","like_btn","likesCount","share_btn","sharesCount","Preloader","maxLength300","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","form_post","post_form_textarea","Field","name","placeholder","component","Textarea","validate","requiredFiled","MyPosts","postsElements","postsData","map","post","id","key","posts","values","addPost","posts_wrap","MyPostsContainer","this","React","Component","compose","connect","state","profilePage","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","status_section","autoFocus","onFocus","event","target","select","onChange","e","currentTarget","onBlur","updateStatus","status_input","onDoubleClick","status_text","ProfileData","profile_desc","fullName","aboutMe","profile_info_wrap","profile_info_wrap_no_about","status_and_job","children","looking_for_job","job_status","lookingForAJob","lookingForAJobDescription","about_me","social_media","Contacts","contacts","socialMedia","facebook","website","vk","twitter","instagram","youtube","github","mainLink","socialMediaLinks","keys","filter","link","href","rel","ProfileInfo","isOwner","savePhoto","avatar_info","cover_img","backgroundImage","coverPhoto","Container","avatar_jobStatus","avatar_wrap","type","files","htmlFor","Profile","ProfileContainer","settingProfileCondition","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.e02fbd08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover_img.7618a1c6.jfif\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar_wrap\":\"ProfileInfo_avatar_wrap__ZfZ-0\",\"status_section\":\"ProfileInfo_status_section__1QnDR\",\"status_input\":\"ProfileInfo_status_input__19Uc4\",\"status_text\":\"ProfileInfo_status_text__37PMA\",\"profile_desc\":\"ProfileInfo_profile_desc__197UF\",\"cover_img\":\"ProfileInfo_cover_img__3vh4P\",\"social_media\":\"ProfileInfo_social_media__1MAyk\",\"looking_job\":\"ProfileInfo_looking_job__1OM4Z\",\"dont_looking_job\":\"ProfileInfo_dont_looking_job__3D-q1\",\"looking_for_job\":\"ProfileInfo_looking_for_job__AUgng\",\"about_me\":\"ProfileInfo_about_me__2fdAT\",\"profile_info_wrap\":\"ProfileInfo_profile_info_wrap__3zWHy\",\"profile_info_wrap_no_about\":\"ProfileInfo_profile_info_wrap_no_about__26Yy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"form_post\":\"MyPosts_form_post__Y8C2p\",\"post_form_textarea\":\"MyPosts_post_form_textarea__3lXQy\",\"posts_wrap\":\"MyPosts_posts_wrap__emomV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img_wrap\":\"Post_img_wrap__3tUQL\",\"post_item\":\"Post_post_item__3Uhi2\",\"img_text_wrap\":\"Post_img_text_wrap__3-E4v\",\"post_img_wrap\":\"Post_post_img_wrap__3WkDn\",\"post_text_img_wrap\":\"Post_post_text_img_wrap__skWEc\",\"btns_social\":\"Post_btns_social__3BOst\",\"like_btn\":\"Post_like_btn___kd4n\"};","import React from 'react'\nimport userPhoto from '../../../../assets/images/profile_img_plug.jpg'\nimport Preloader from '../../../common/Preloader/Preloader'\nimport style from './Post.module.css'\n\nconst Post = (props) => {\n\n    if (!props.profile) return <Preloader />\n\n    return (\n        <div className={style.post_item}>\n            <div className={style.img_text_wrap}>\n                <div className={style.img_wrap}>\n                    <img src={props.profile.photos.small != null\n                        ? props.profile.photos.small\n                        : userPhoto} alt='' />\n                </div>\n                <div className={style.post_text_img_wrap}>\n                    {props.imgPath != null\n                        ? <div className={style.post_img_wrap}>\n                            <img src={props.imgPath} alt=\"\" />\n                        </div>\n                        : null}\n                    <p>\n                        {props.message}\n                    </p>\n                </div>\n            </div>\n            <div className={style.btns_social}>\n                <button className={style.like_btn}>\n                    👍<sup>{props.likesCount}</sup>\n                </button>\n                <button className={style.share_btn}>\n                    🔗<sup>{props.sharesCount}</sup>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { maxLengthCreator, requiredFiled } from '../../../utils/validators/validators'\nimport { Textarea } from '../../common/FormElements/FormElements'\nimport style from './MyPosts.module.css'\nimport Post from './Post/Post'\n\nconst maxLength300 = maxLengthCreator(300)\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={style.form_post}>\n            <div className={style.post_form_textarea}>\n                <Field name={'post'} placeholder='Make some post ..' component={Textarea}\n                    validate={[requiredFiled, maxLength300]} />\n            </div>\n            <button>\n                Post! ✈\n            </button>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({ form: 'profilePostForm' })(PostForm)\n\nconst MyPosts = (props) => {\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return nextProps != props || nextState != state\n    // }   \n\n    let postsElements = props.postsData.map(post => <Post\n        id={post.id}\n        key={post.id}\n        likesCount={post.likesCount}\n        sharesCount={post.sharesCount}\n        message={post.message}\n        imgPath={post.imgPath}\n        profile={props.profile}\n    />)\n\n    const onAddPost = (values) => {\n        props.addPost(values.post)\n    }\n\n    return (\n        <div className={style.posts}>\n            <PostReduxForm onSubmit={onAddPost} />\n            <hr />\n            <div className={style.posts_wrap}>\n                {postsElements}\n            </div>\n        </div >\n    )\n}\n\nexport default MyPosts\n\n","import React from 'react'\nimport { addPost } from '../../../redux/profileReducer'\nimport MyPosts from './MyPosts'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\n\nclass MyPostsContainer extends React.Component {\n    render() {\n        return <MyPosts {...this.props} />\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    postsData: state.profilePage.postsData,\n    profile: state.profilePage.profile\n})\n\nexport default compose(\n    connect(mapStateToProps, { addPost })\n)(MyPostsContainer)","import React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport style from './ProfileInfo.module.css'\n\nconst ProfileStatusHooks = (props) => {\n    let statusPlug = `I'm Social Network Part`\n    let handleFocus = (event) => event.target.select()\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const editModeOn = () => {\n        setEditMode(true)\n    }\n\n    const editModeOf = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={style.status_section}>\n            {editMode\n                ? <input autoFocus onFocus={handleFocus} onChange={onStatusChange} value={status} onBlur={editModeOf} className={style.status_input} />\n                : <p onDoubleClick={editModeOn} className={style.status_text}>{props.status || statusPlug}</p>}\n        </div>\n    )\n}\n\nexport default ProfileStatusHooks","import React from 'react'\nimport Container from '../../common/Container/Container'\nimport Preloader from '../../common/Preloader/Preloader'\nimport style from './ProfileInfo.module.css'\nimport userPhoto from '../../../assets/images/profile_img_plug.jpg'\nimport coverPhoto from '../../../assets/images/cover_img.jfif'\nimport { FaFacebookSquare, FaExternalLinkSquareAlt, FaVk, FaTwitterSquare, FaInstagramSquare, FaYoutubeSquare, FaGithubSquare, FaLink } from 'react-icons/fa'\nimport ProfileStatusHooks from './ProfileStatusHooks'\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\n\n    if (!profile) return <Preloader />\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) savePhoto(e.target.files[0])\n    }\n\n    return (\n        <div className={style.avatar_info}>\n            {/* <div className={style.cover_img} style={{ backgroundImage: `url(${profile.photos.large || coverPhoto})` }} /> */}\n            <div className={style.cover_img} style={{ backgroundImage: `url(${coverPhoto})` }} />\n            <Container>\n                <section className={style.avatar_jobStatus}>\n                    <div className={style.avatar_wrap}>\n                        {isOwner && <>\n                            <input id={'file_profile_img'} type='file' onChange={onMainPhotoSelected} />\n                            <label htmlFor={'file_profile_img'} />\n                        </>}\n                        <img src={profile.photos.small || userPhoto} alt='' />\n                    </div>\n                </section>\n\n                <ProfileData profile={profile}>\n                    <ProfileStatusHooks status={status} updateStatus={updateStatus} isOwner={isOwner} />\n                </ProfileData>\n\n            </Container>\n        </div>\n    )\n}\n\nconst ProfileData = ({ profile, ...props }) => {\n    return (\n        <div className={style.profile_desc}>\n            <h2>\n                {profile.fullName}\n            </h2>\n            <div className={profile.aboutMe !== null ? style.profile_info_wrap : style.profile_info_wrap_no_about}>\n                <div className={style.status_and_job}>\n                    {/* Status */}\n                    {props.children}\n                    {/* Status */}\n                    <div className={style.looking_for_job}>\n                        <div className={style.job_status}>\n                            <b>Looking for a job : </b>\n                            <span>{profile.lookingForAJob ? 'yes' : 'no'}</span>\n                        </div>\n                        {profile.lookingForAJob && <p>{profile.lookingForAJobDescription}</p>}\n                    </div>\n                </div>\n                {profile.aboutMe !== null &&\n                    <div className={style.about_me}>\n                        <b>About me</b>\n                        <p>{profile.aboutMe}</p>\n                    </div>}\n            </div>\n            <div className={style.social_media}>\n                <Contacts profile={profile} />\n            </div>\n        </div>\n    )\n}\n\nconst Contacts = (props) => {\n    let contacts = props.profile.contacts\n\n    let socialMedia = {\n        facebook: <FaFacebookSquare />,\n        website: <FaExternalLinkSquareAlt />,\n        vk: <FaVk />,\n        twitter: <FaTwitterSquare />,\n        instagram: <FaInstagramSquare />,\n        youtube: <FaYoutubeSquare />,\n        github: <FaGithubSquare />,\n        mainLink: <FaLink />\n    }\n\n    let socialMediaLinks = Object.keys(socialMedia).filter(link => {\n        return contacts[link] != null\n    }).map(link => {\n        return <a key={link} href={contacts[link]} rel='noopener noreferrer' target='_blank'>{socialMedia[link]}</a>\n    })\n\n    return (\n        <>\n            { socialMediaLinks}\n        </>\n    )\n}\n\nexport default ProfileInfo\n\n// A ninja or shinobi  was a covert agent or mercenary in feudal Japan. The functions of a ninja included espionage, deception, and surprise attacks.","import React from 'react'\nimport Container from '../common/Container/Container'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = (props) => {\n    return (\n        <>\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <Container>\n                <MyPostsContainer />\n            </Container>\n        </>\n    )\n}\n\nexport default Profile","import React from 'react'\nimport Profile from './Profile'\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from '../../redux/profileReducer'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../../hoc/WithAuth/withAuthRedirect'\n\nclass ProfileContainer extends React.Component {\n    // constructor(props) {\n    //     super(props)\n    // }\n\n    // refreshProfile() {\n    //     let userId =+ this.props.match.params.userId\n    //     if (!userId) {\n    //         userId = this.props.authorizedUserId;\n    //         if (!userId) {\n    //             this.props.history.push('/login')\n    //         }\n    //     }\n\n    //     if (!userId) {\n    //         console.error(\"ID should exists in URI params or in state ('authorizedUserId')\")\n    //     } else {\n    //         this.props.getUserProfile(userId)\n    //         this.props.getStatus(userId)\n    //     }\n    // }\n\n    // componentDidMount() {\n    //     this.refreshProfile()\n    // }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (this.props.match.params.userId != prevProps.match.params.userId) {\n    //         this.refreshProfile()\n    //     }\n    // }\n\n    settingProfileCondition = () => {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount = () => {\n        this.settingProfileCondition()\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.settingProfileCondition()\n        }\n    }\n\n    render() {\n        return <Profile {...this.props}\n            isOwner={!this.props.match.params.userId}\n            profile={this.props.profile}\n            status={this.props.status}\n            updateStatus={this.props.updateStatus}\n            savePhoto={this.props.savePhoto} />\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}